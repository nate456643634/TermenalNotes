import os 
import json 
from datetime import datetime

NOTES_FILE = os.path.join(os.path.dirname(__file__), "notes.json")


def check_file_premission():
    try:
        with open(NOTES_FILE, "a", encoding="utf-8"):
            pass
        return True
    except PermissionError:
        print("–û—à–∏–±–∫–∞, —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É")



def load_notes():
    if not os.path.exists(NOTES_FILE):
        return []
    try:
        with open(NOTES_FILE, "r", encoding="utf-8") as f:
           data = f.read()

           if not data.strip():
               return []
           return json.loads(data)
    except (json.JSONDecodeError, IOError) as e:
        print(f"–û—à–∏–±–∫–∞ {e} ")
        return []



def save_notes(notes):
    try:
        with open(NOTES_FILE, "w", encoding="utf-8") as f:
           json.dump(notes, f, ensure_ascii=False, indent=4)
    except IOError as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤! {e} ")




def add_note():
    title = input("–í–≤–µ–¥–∏—Ç–µ –ó–∞–≥–æ–ª–æ–≤–æ–∫: ")
    content = input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–º–µ—Ç–∫—É: ")
    timespawn = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    notes = load_notes()
    notes.append({
        "id": len(notes) + 1,
        "title": title,
        "content": content,
        "datatime_create_at": timespawn,
        "datatime_update_at": timespawn
    })

    save_notes(notes)
    print("–ó–∞–º–µ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")




def list_notes():
    notes = load_notes()

    for note in notes:
        print(f"\nID: {note['id']}")
        print(f"\n–ó–∞–≥–æ–ª–æ–≤–æ–∫: {note['title']}")
        print(f"\n–ó–∞–º–µ—Ç–∫–∞: {note['content']}")
        print(f"\n–î–∞—Ç–∞ –°–æ–∑–¥–∞–Ω–∏–µ: {note['datatime_create_at']}")
        print(f"\n–í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {note['datatime_update_at']}")
        print("-" * 30)
    

    if not notes:
        print("üìù –°–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫ –ø—É—Å—Ç.")
        return




def search_notes():
    query = input("–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞: ")
    notes = load_notes()
    found = []

    for note in notes:
        if (query in note['title'].lower()) or (query in note['content'].lower()):
            found.append(note)
    if not found:
        print("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    else:
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(found)} –∑–∞–º–µ—Ç–æ–∫")
        for note in notes:
            print(f"/ID: {note['id']} | {note('titile')}")



def delite_notes():
    list_notes()
    try:
        note_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –¥–ª—è —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏: "))
        notes = load_notes()
        notes = [note for note in notes if note['id'] != note_id]
        save_notes(notes)
        print("–ó–∞–º–µ—Ç–∫–∞ –£–¥–∞–ª–µ–Ω–∞")
    except ValueError:
        print("–û—à–∏–±–∫–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")



def edit_notes():
    list_notes()

    try:
        notes_id = int(input("–í–í–µ–¥–∏—Ç–µ ID –¥–ª—è —Ä–µ–¥–æ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–æ–∫: "))
        notes = load_notes()

        for note in notes:
            if note["id"] == notes_id:
                new_title = input(f"–ù–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ ({note['title']})") or note["title"]
                new_content = input(f"–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞ ({note['content']})") or note["content"]

                note["title"] = new_title
                note["content"] = new_content
                note["datatime_update_at"] = datetime.now().strftime("%Y-%m-%d, %H:%M:%S")

                save_notes(notes)
                print("–ó–∞–º–µ—Ç–∫–∞ –û–±–Ω–æ–≤–ª–µ–Ω–∞!")
                return
        print("–ó–∞–º–µ—Ç–∫–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    except ValueError:
        print("–£–ø—Å –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ!")



def main():
    print(f"–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")


    if not check_file_premission():
        return
    
    while True:
        print("\n NoteClI - –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–º–µ—Ç–æ–∫!")
        print("\n 1: –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É")
        print("\n 2: –°–ø–∏—Å–æ–∫ –ó–∞–º–µ—Ç–æ–∫")
        print("\n 3: –ü–æ–∏—Å–∫ –∑–∞–º–µ—Ç–æ–∫")
        print("\n 4: –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É")
        print("\n 5: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É –∑–∞–º–µ—Ç–∫—É")
        print("\n 6: –í—ã—Ö–æ–¥")


        choise = int(input("\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ "))

        if choise == 1:
            add_note()
        elif choise == 2:
            list_notes()
        elif choise == 3:
            search_notes()
        elif choise == 4:
            delite_notes()
        elif choise == 5:
            edit_notes()
        elif choise == 6:
            break
        else:
            print("–û—à–∏–±–∫–∞ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ —Ç–æ —á–∏—Å–ª–æ —á—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö")


if __name__ == "__main__":
    main()